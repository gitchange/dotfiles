alias hs="heroku sudo"
alias h="heroku"

alias ha="hs addons -a "
alias hp="hs ps -a "
alias hb="hs run bash -a "
alias hu="hs user:info -x --user "
alias hd="hs domains -a "
alias hl="hs logs --tail -a "
alias he="hs events -a "

alias hsa="hs sharing:add neil@heroku.com  -a "
alias hsr="hs sharing:remove neil@heroku.com -a "
alias hnr="hs addons:open newrelic -a "

logs() {
  hs logs:analyze -a $1
}

is_heroku() {
  curl -vL http://$1/F3DA8257-B28C-49DF-AACD-8171464E1D1D 2>&1 | grep -q MochiWeb && echo "yes" || echo "no"
}

extend_boot() {
  heroku sudo caps:add boot_timeout $1 -a $2
}

ao() {
  heroku sudo addons:open $1 -a $2
}

alias hrgc="hs repo:gc -a "

hc() {
  echo "$ heroku config -a ${1}"
  hk sudo env -a $1
}

hi() {
  hk sudo info -a $1
  echo ""
  echo "Processes:"
  hk sudo dynos -a $1
}

hssl() {
  heroku sudo certs -a $1
  echo ""
  heroku sudo certs:info -a $1
}

# show configs related to postgres
hci() {
  heroku sudo config -a $1 | grep -i post
}

hpi() {
  heroku sudo pg:info -a $1
}

hps() {
  hk sudo dynos -a $1
}

hsi() {
  hk sudo info -a $1
}

hsl() {
  heroku sudo logs -t -a $1
}

hslp() {
  heroku sudo logs -t -p postgres -a $1
}

# restore to a local db from a dump file
restore_local() {
  pg_restore --verbose --clean --no-acl --no-owner -h localhost -U neil -d $2
$1
}
